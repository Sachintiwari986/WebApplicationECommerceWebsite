@model WebApplicationECommerceWebsite.Models.ViewModel.ProductViewModel

@{
    ViewBag.Title = "AddEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>

        function Showimagepreview1(input) {
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#smimg').attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }
    </script>

@section breadcumb1
{
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">ManageProduct</li>
    </ol>
}
@section breadcumb2
{
    <div class="col-lg-12">
        <h1 class="page-header">Product</h1>
    </div>
}

<div class="panel panel-default">
    <div class="panel-heading">
        <ul class="pull-right">
            <li style="list-style:none">   <a class="btn btn-info" style="margin-bottom:10px" onclick="AddEditCategory(0)"><i class="fa fa-plus"></i> Add New</a> </li>
        </ul>

    </div>
    <div class="panel-body">
        <div class="canvas-wrapper">

            @using (Html.BeginForm("AddEdit", "Product", FormMethod.Post, new { @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(Model => Model.ProductId);

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "CategoryId", "CategoryName"), "Choose Category", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isNumberKey(event,this)" } })
                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SellingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SellingPrice, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isNumberKey(event,this)" } })
                        @Html.ValidationMessageFor(model => model.SellingPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isNumberKey(event,this)" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.HiddenFor(model => model.Photo)
                    <div class="col-md-10">
                        <img id="smimg" src="~/ProductImages/@Model.Photo" height="100" width="90" />
                        @Html.TextBoxFor(model => model.Photo, new { @class = "form-control", @Type = "file", @onchange = "Showimagepreview1(this)" })
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IsSpecial, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBox("IsSpecial")
                        @Html.ValidationMessageFor(model => model.IsSpecial, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
                <div>
                    @Html.ActionLink("Back to List", "ManageProduct")
                </div>
            </div>

            }





        </div>
    </div>
</div>

